Comandos avanzados:

Crear ambiente virtual

 conda create --name [nombre_paquete] [paquetes]

Instalar paquete que no esta disponible en el canal principal de conda:

 conda install -c [nombre_canal] [nombre_paquete] 

Enlistar las revisiones del estado del ambiente virtual:

 conda list --revision

Volver al estado de una revisión anterior:

 conda install --revision [nombre_revision]

Crear una descripción del ambiente con todas sus dependencia para compartir:

 conda env export  --no-builds

Crear una descripción del ambiente solo con los paquetes agregados manualmente (tiene la ventaja que permite mayor compatibilidad multiplataforma, daod que conda se encarga de instalar las dependencias especificas para los paquetes en el SO):

conda env export --from-history

Crear un archivo con la descripción(suele ser común en este tipo de archivos el formato .yml):

conda env export --from-history --file nombre_archivo.yml

Instalar ambiente virtual desde archivo:

conda env create --file nombre_archivo.yml

Espero pueda ser de utilidad para todos!


Notas :smile: Conda: Comandos avanzados.

    Para buscar paquetes: Anaconda.org
    Podemos encontrar algún paquete que necesitemos en un channel como conda-forge. 😯
    conda install --channel <nombre del canal> <paquete> Para instalar un paquete especificando el channel de donde buscarlo.
    conda list --revision para listar las revisiones (modificaciones) de tu ambiente; con esto puedes volver en el tiempo a un estado pasado de tu ambiente virtual.
    conda install --revision <falg> para regresar a un estado pasado de tu ambiente. 🌲
    conda env export --no-build Para compartir nuestro ambiente de conda y que otras personas puedan tener exactamente el mismo ambiente que tú.
    Con conda env export --from-history --file <archivo>.yml para compartir únicamente los paquetes que hayamos especificado explícitamente. 🔍. Esta es la mejor manera!
    Para instalar un ambiente del cual recibimos un archivo .yml hacemos conda env create --file <archivo>.yml 🤯
